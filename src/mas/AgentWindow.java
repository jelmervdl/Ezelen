/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package mas;

import java.awt.Color;
import java.awt.Image;
import java.util.HashMap;
import java.util.Map;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.border.Border;
import javax.swing.border.LineBorder;
import javax.swing.text.DefaultCaret;

/**
 *
 * @author jelmer
 */
public class AgentWindow extends javax.swing.JFrame implements Agent.Listener {

    private Agent agent;
    
    private Map<Card, ImageIcon> iconCache;
    
    /**
     * Creates new form AgentWindow
     */
    public AgentWindow()
    {
        iconCache = new HashMap<Card, ImageIcon>();
        
        initComponents();
        
        knowledgePage.setEditable(false);
        
        DefaultCaret caret = (DefaultCaret) knowledgePage.getCaret();
        caret.setUpdatePolicy(DefaultCaret.NEVER_UPDATE);
    }
    
    public void setAgent(Agent agent)
    {
        if (this.agent != null)
            this.agent.removeListener(this);
        
        this.agent = agent;
        
        agent.addListener(this);
        
        agentChanged(agent);
    }
    
    @Override
    public void agentChanged(Agent agent)
    {
        updateName();
        
        updateCards();
        
        updateKnowledge();
    }
    
    private void updateName()
    {
        agentName.setText(agent.getName());
    }
    
    private void updateCards()
    {
        Card[] cards = agent.getHand().toArray(new Card[0]);
        JLabel[] labels = {card1, card2, card3, card4}; 
        
        Border border = new LineBorder(Color.blue, 1, true);
        
        for (int i = 0; i < 4; ++i) {
            if (cards.length > i && agent.getReceivedCard() != null && cards[i].equals(agent.getReceivedCard()))
                labels[i].setBorder(border);
            else
                labels[i].setBorder(null);
            
            if (cards.length > i)
                labels[i].setIcon(getCardIcon(cards[i]));
            else
                labels[i].setIcon(null);
        }
    }
    
    private void updateKnowledge()
    {
        knowledgePage.setText(agent.getThoughts());
    }
    
    private ImageIcon getCardIcon(Card card)
    {
        ImageIcon icon = iconCache.get(card);
        
        if (icon == null) {
            icon = new ImageIcon(card.getImage().getScaledInstance(-1, 90, Image.SCALE_SMOOTH));
            iconCache.put(card, icon);
        }
        
        return icon;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        knowledgePage = new javax.swing.JTextArea();
        agentName = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        card1 = new javax.swing.JLabel();
        card2 = new javax.swing.JLabel();
        card3 = new javax.swing.JLabel();
        card4 = new javax.swing.JLabel();

        knowledgePage.setColumns(20);
        knowledgePage.setRows(5);
        jScrollPane1.setViewportView(knowledgePage);

        agentName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        agentName.setText("[Naam]");

        jPanel1.setLayout(new java.awt.GridLayout(1, 0));
        jPanel1.add(card1);
        jPanel1.add(card2);
        jPanel1.add(card3);
        jPanel1.add(card4);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 345, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(agentName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 433, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(agentName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel agentName;
    private javax.swing.JLabel card1;
    private javax.swing.JLabel card2;
    private javax.swing.JLabel card3;
    private javax.swing.JLabel card4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea knowledgePage;
    // End of variables declaration//GEN-END:variables
}
